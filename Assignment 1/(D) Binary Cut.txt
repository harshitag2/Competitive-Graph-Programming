#include <bits/stdc++.h>
using namespace std;
#define int long long int

void solve() {
    string s;
    cin >> s;
    int n = s.length();
    int cnt = 1;
    int isPresent = 0;
    for (int i = 1; i < n; i++) {
        if (s[i] != s[i - 1]) {
            cnt++;
        }
        if (s[i] == '1' && s[i - 1] == '0') {
            isPresent = 1;
        }
    }
    cout << cnt - isPresent << endl;
}

signed main() {
    int t;
    cin >> t;
    while (t--) {
        solve();
    }
}
	
	int a[k+1], b[k+1]; 
	a[0]=0; b[0]=0;
	
	for(int i=1;i<=k;i++){
	    cin>>a[i];
	}
	for(int i=1;i<=k;i++){
	    cin>>b[i];
	}
	
	while(q--){
	    
	    int d;
	    cin>>d;
	    
	    if(d==0){cout<<0<<" "; continue;}
	    if(d==n){cout<<b[k]<<" "; continue;}
 
	    int ind = upper_bound(a,a+k+1,d) - a;
	    int ans = b[ind-1]; //time taken to the reach the stop just before distance d
	    
	    int dist = a[ind] - a[ind-1];
	    int time_taken = b[ind] - b[ind-1] ;
	    
	    // time_to_cover_unit_dist = time_taken/dist;
	    
	    int extra_dist_to_cover = d-a[ind-1];
	    int extra_time = (extra_dist_to_cover*time_taken)/(dist);
	    ans+=extra_time;
	    
	    cout<<ans<<" ";
	}
	line;
 
}
signed main()
{
	ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
 
	int t;
	cin>>t;
	while(t--)
	{
		solsh();
	}
}